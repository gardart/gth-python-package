name: Publish Python 🐍 distributions 📦 to PyPI and TestPyPI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI and TestPyPI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pycodestyle
        pip install coverage
        pip install flake8
        pip install pytest

    - name: Lint with flake8
      run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings.
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: GitHub Action for pylint
      uses: cclauss/GitHub-Action-for-pylint@0.7.0
      with:
        args: "pip install . ; pylint **/*.py"
      if: ${{ false }}
      continue-on-error: true

    - name: GitHub Action for pytest
      uses: cclauss/GitHub-Action-for-pytest@0.5.0
      with:
        args: "python -m pip install . --user ; python -m pytest"
        #args: "pip install -r requirements.txt ; pytest"
      if: ${{ false }}
      continue-on-error: true

    - name: Check PEP8 compliance
      run: pycodestyle --ignore=W504,E501 src/
      continue-on-error: true

    - name: Run tests
      run: coverage run -m pytest
      continue-on-error: true

    - name: Show coverage report
      run: coverage report --skip-covered --omit *tests*
      continue-on-error: true

    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    - name: Publish distribution 📦 to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
